package esac.archive.vospace.persistence.model;
// Generated Mar 29, 2014 6:27:54 PM by Hibernate Tools 3.3.0.GA

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.InheritanceType;
import javax.persistence.Inheritance;

import static javax.persistence.GenerationType.SEQUENCE;

import javax.persistence.CascadeType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * Node generated by hbm2java
 */
@Entity
@Table(name = "node", schema = "vos")
@Inheritance(strategy = InheritanceType.JOINED)
public class Node implements java.io.Serializable {

     private Integer nodeOid;
     private ContainerNode containerNode;
     private Users users;
     private String name;
     
     private Set<VoCapability> nodeCapabilities = new HashSet<VoCapability>(0);
     
     private Set<NodeProperty> nodePropertySet = new HashSet<NodeProperty>(0);
     //private Map<VoProperty,String> nodePropertySet = new HashMap<VoProperty,String>(0);

    public Node() {
    }

	
    public Node(Users users, String name) {
        this.users = users;
        this.name = name;
    }    
   
    @SequenceGenerator(name="generator", sequenceName="node_node_oid_seq")
    @Id
    @GeneratedValue(strategy=SEQUENCE, generator="generator")    
    @Column(name="node_oid", unique=true, nullable=false)
    public Integer getNodeOid() {
        return this.nodeOid;
    }
     
     @ManyToOne(fetch=FetchType.LAZY)
     @JoinColumn(name="parent_container_id")
     public ContainerNode getContainerNode() {
         return this.containerNode;
     }
     
     public void setContainerNode(ContainerNode containerNode) {
         this.containerNode = containerNode;
     }
    
    public void setNodeOid(Integer nodeOid) {
        this.nodeOid = nodeOid;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="owner_id", nullable=false)
    public Users getUsers() {
        return this.users;
    }
    
    public void setUsers(Users users) {
        this.users = users;
    }

    
    @Column(name="name", nullable=false)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "node_capability", schema = "vos",
    joinColumns = { @JoinColumn(name = "node_id", nullable = false, updatable = false) }, 
    inverseJoinColumns = { @JoinColumn(name = "capability_id", nullable = false, updatable = false) })
    public Set<VoCapability> getNodeCapabilities() {
        return this.nodeCapabilities;
    }
    
    public void setNodeCapabilities(Set<VoCapability> nodeCapabilities) {
        this.nodeCapabilities = nodeCapabilities;
    }

    /*@OneToMany(fetch=FetchType.LAZY, mappedBy="node")
    public Set<ShareUser> getShareUsers() {
        return this.shareUsers;
    }
    
    public void setShareUsers(Set<ShareUser> shareUsers) {
        this.shareUsers = shareUsers;
    }*/

    /*@ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "node_property", schema = "vos",
    joinColumns = { @JoinColumn(name = "node_id", nullable = false, updatable = false) }, 
    inverseJoinColumns = { @JoinColumn(name = "porperty_id", nullable = false, updatable = false) })
    public Set<VoProperty> getNodeProperties() {
        return this.nodeProperties;
    }
    
    public void setNodeProperties(Set<VoProperty> nodeProperties) {
        this.nodeProperties = nodeProperties;
    }*/
    
    /*@OneToMany(fetch=FetchType.LAZY, mappedBy="node")
    public Set<NodeProperty> getNodeProperties() {
        return this.nodeProperties;
    }
    
    public void setNodeProperties(Set<NodeProperty> nodeProperties) {
        this.nodeProperties = nodeProperties;
    }*/

    /*@ManyToMany
    @JoinTable(name="node_property", schema = "vos",
    joinColumns=@JoinColumn(name="node_id"),
    inverseJoinColumns=@JoinColumn(name="value"))
    @MapKeyJoinColumn(name="property_id")
    public Map<VoProperty, String> getNodePropertySet() {
        return nodePropertySet;
    }

    public void setNodePropertySet(Map<VoProperty, String> nodeProperties) {
        this.nodePropertySet = nodeProperties;
    }*/


    /**
     * @return the nodePropertyTestSet
     */    
    @OneToMany(fetch = FetchType.LAZY, mappedBy="node", orphanRemoval = true, cascade = CascadeType.ALL) //CascadeType.PERSIST, CascadeType.REMOVE
    //@org.hibernate.annotations.Cascade( {org.hibernate.annotations.CascadeType.SAVE_UPDATE})
    public Set<NodeProperty> getNodePropertySet() {
        return nodePropertySet;
    }


    /**
     * @param nodePropertyTestSet the nodePropertyTestSet to set
     */
    public void setNodePropertySet(Set<NodeProperty> nodePropertySet) {
        this.nodePropertySet = nodePropertySet;
    }

}


