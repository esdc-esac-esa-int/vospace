package esac.archive.vospace.persistence.model.controls;
// Generated Sep 11, 2014 5:28:54 PM by Hibernate Tools 3.3.0.GA


import static javax.persistence.GenerationType.SEQUENCE;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TransferLog generated by hbm2java
 */
@Entity
@Table(name="transfer_log"
    ,schema="controls"
)
public class TransferLog  implements java.io.Serializable {


     private Integer transferLogOid;
     private User user;
     private Date startTimestamp;
     private Date stopTimestamp;
     private TransferOperType operationType;
     private String protocolParam;
     private String viewParam;
     private Long totalSize;

    public TransferLog() {
    }

	
    public TransferLog(Integer transferLogOid, User user, Date startTimestamp, TransferOperType operationType) {
        this.transferLogOid = transferLogOid;
        this.user = user;
        this.startTimestamp = startTimestamp;
        this.operationType = operationType;
    }
    public TransferLog(Integer transferLogOid, User user, Date startTimestamp, Date stopTimestamp, TransferOperType operationType, String protocolParam, String viewParam, Long totalSize) {
       this.transferLogOid = transferLogOid;
       this.user = user;
       this.startTimestamp = startTimestamp;
       this.stopTimestamp = stopTimestamp;
       this.operationType = operationType;
       this.protocolParam = protocolParam;
       this.viewParam = viewParam;
       this.totalSize = totalSize;
    }
   
    @SequenceGenerator(name="generator", sequenceName="controls.transfer_log_transfer_log_oid_seq")
    @Id
    @GeneratedValue(strategy=SEQUENCE, generator="generator")
    @Column(name="transfer_log_oid", unique=true, nullable=false)
    public Integer getTransferLogOid() {
        return this.transferLogOid;
    }
    
    public void setTransferLogOid(Integer transferLogOid) {
        this.transferLogOid = transferLogOid;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user_id", nullable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="start_timestamp", nullable=false, length=29)
    public Date getStartTimestamp() {
        return this.startTimestamp;
    }
    
    public void setStartTimestamp(Date startTimestamp) {
        this.startTimestamp = startTimestamp;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="stop_timestamp", length=29)
    public Date getStopTimestamp() {
        return this.stopTimestamp;
    }
    
    public void setStopTimestamp(Date stopTimestamp) {
        this.stopTimestamp = stopTimestamp;
    }

    
    @Column(name="operation_type", nullable=false)
    public TransferOperType getOperationType() {
        return this.operationType;
    }
    
    public void setOperationType(TransferOperType operationType) {
        this.operationType = operationType;
    }

    
    @Column(name="protocol_param")
    public String getProtocolParam() {
        return this.protocolParam;
    }
    
    public void setProtocolParam(String protocolParam) {
        this.protocolParam = protocolParam;
    }

    
    @Column(name="view_param")
    public String getViewParam() {
        return this.viewParam;
    }
    
    public void setViewParam(String viewParam) {
        this.viewParam = viewParam;
    }

    
    @Column(name="total_size")
    public Long getTotalSize() {
        return this.totalSize;
    }
    
    public void setTotalSize(Long totalSize) {
        this.totalSize = totalSize;
    }




}


