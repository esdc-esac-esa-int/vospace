package esac.archive.vospace.persistence.model;
// Generated Jun 4, 2014 5:23:36 PM by Hibernate Tools 3.3.0.GA


import static javax.persistence.GenerationType.SEQUENCE;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import esac.archive.vospace.persistence.model.Users;

/**
 * Groups generated by hbm2java
 */
@Entity
@Table(name="groups"
    , uniqueConstraints = @UniqueConstraint(columnNames={"name", "manager"}) 
)
public class Groups  implements java.io.Serializable {


     private Integer groupOid;
     private Users manager;
     private String name;
     private String description;
     private Date creationDate;
     
     //private Set<GroupNodeProperty> shareNodeProperty = new HashSet<GroupNodeProperty>(0); //nodes shared with this group
     
     private Set<Users> members = new HashSet<Users>(0); //group members

    public Groups() {
    }

    
    public Groups(Integer groupOid, Users users, String name, String description, Date creationDate) {
        this.groupOid = groupOid;
        this.manager = users;
        this.name = name;
        this.description = description;
        this.creationDate = creationDate;
    }
    /*public Groups(Integer groupOid, Users users, String name, String description, Date creationDate, Set<GroupNodeProperty> groupNodeProperties) {
       this.groupOid = groupOid;
       this.users = users;
       this.name = name;
       this.description = description;
       this.creationDate = creationDate;
       this.groupNodeProperties = groupNodeProperties;
    }*/
   
    @SequenceGenerator(name="generator", sequenceName="group_group_oid_seq")
    @Id 
    @GeneratedValue(strategy=SEQUENCE, generator="generator")
    @Column(name="group_oid", unique=true, nullable=false)
    public Integer getGroupOid() {
        return this.groupOid;
    }
    
    public void setGroupOid(Integer groupOid) {
        this.groupOid = groupOid;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="manager", nullable=false)
    public Users getManager() {
        return this.manager;
    }
    
    public void setManager(Users users) {
        this.manager = users;
    }

    
    @Column(name="name", nullable=false)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="description", nullable=false)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="creation_date", nullable=false, length=29)
    public Date getCreationDate() {
        return this.creationDate;
    }
    
    public void setCreationDate(Date creationDate) {
        this.creationDate = creationDate;
    }

    /*@OneToMany(fetch=FetchType.LAZY, mappedBy="groups")
    public Set<GroupNodeProperty> getGroupNodeProperties() {
        return this.groupNodeProperties;
    }
    
    public void setGroupNodeProperties(Set<GroupNodeProperty> groupNodeProperties) {
        this.groupNodeProperties = groupNodeProperties;
    }*/

    /*@ManyToMany(fetch=FetchType.LAZY, mappedBy="groups")
    public Set<GroupNodeProperty> getShareNodeProperty() {
        return this.shareNodeProperty;
    }
    
    public void setShareNodeProperty(Set<GroupNodeProperty> shareNodeProperty) {
        this.shareNodeProperty = shareNodeProperty;
    }*/
    
    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "user_group", schema = "vos",
    joinColumns = { @JoinColumn(name = "group_id", nullable = false, updatable = false) }, 
    inverseJoinColumns = { @JoinColumn(name = "user_id", nullable = false, updatable = false) })
    public Set<Users> getMembers() {
        return this.members;
    }
    
    public void setMembers(Set<Users> members) {
        this.members = members;
    }

}